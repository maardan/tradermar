const sumOfArray = (arr) => arr.reduce((a, b) => a + b, 0);

const sortByCount = (obj) => {
    const sortedArr = Object.entries(obj).sort((a, b) => b[1] - a[1]);

    return sortedArr;

    const res = {};

    for (let i = 0; i < sortedArr.length; i++) {
        res[sortedArr[i][0]] = res[sortedArr[i][1]];
    }
};

const sortByProperty = (arr, property) => {
    const sortedArr = arr.sort((a, b) => b[property] - a[property]);

    return sortedArr;
};

// findDuplicateWords("CDTX PTR CLSD");
const findDuplicateWords = (str) => {
    const strArr = str.split(' ');
    const res = {};

    for (let i = 0; i < strArr.length; i++) {
        if (res[strArr[i]]) {
            res[strArr[i]] = res[strArr[i]] + 1;
        } else {
            res[strArr[i]] = 1;
        }
    }

    return sortByCount(res);
};

const removeUnnecessarySymbols = (symbols) => {
    // Exclude BIG names, UltraShort Pro Shares, etc..
    const bigCaps = [
        'BHP',
        'AMT',
        'INTU',
        'EL',
        'MMM',
        'TOT',
        'BUD',
        'SQ',
        'GS',
        'GE',
        'DE',
        'HSBC',
        'AXP',
        'SCHW',
        'RTX',
        'TD',
        'PDD',
        'BLK',
        'CAT',
        'AMAT',
        'CHTR',
        'IBM',
        'MS',
        'SNY',
        'HDB',
        'NVO',
        'RY',
        'SONY',
        'SBUX',
        'AZN',
        'BA',
        'LOW',
        'SHOP',
        'PM',
        'AMGN',
        'BMY',
        'UL',
        'UNP',
        'C',
        'LIN',
        'UPS',
        'NEE',
        'HON',
        'QCOM',
        'COST',
        'TMUS',
        'SAP',
        'MCD',
        'MDT',
        'TXN',
        'LLY',
        'WFC',
        'DHR',
        'ACN',
        'AVGO',
        'TMO',
        'CVX',
        'MRK',
        'ABBV',
        'PEP',
        'NVS',
        'NKE',
        'TM',
        'ORCL',
        'PFE',
        'CRM',
        'ABT',
        'CSCO',
        'T',
        'NFLX',
        'KO',
        'XOM',
        'VZ',
        'INTC',
        'ADBE',
        'CMCSA',
        'ASML',
        'PYPL',
        'PG',
        'DIS',
        'BAC',
        'HD',
        'UNH',
        'MA',
        'NVDA',
        'WMT',
        'JNJ',
        'JPM',
        'V',
        'BRK.B',
        'BRK.A',
        'TSM',
        'BABA',
        'TSLA',
        'FB',
        'GOOGL',
        'GOOG',
        'AMZN',
        'MSFT',
        'AAPL',
    ];
    const proShares = [
        'ZSL',
        'YXI',
        'YCS',
        'YCL',
        'XPP ',
        'VIXY',
        'VIXM',
        'UYM',
        'UYG',
        'UXI',
        'UWM',
        'UVXY',
        'UST',
        'USD',
        'URTY',
        'URE',
        'UPW',
        'UPV',
        'UPRO',
        'UMDD',
        'ULE',
        'UJB',
        'UGL',
        'UGE',
        'UDOW',
        'UCYB',
        'UCO',
        'UCC',
        'UBT',
        'UBR',
        'TWM',
        'TTT',
        'TQQQ',
        'TOLZ',
        'TMDV',
        'TDV',
        'TBX',
        'TBT',
        'TBF',
        'SZK',
        'SVXY',
        'SSO',
        'SSG',
        'SRTY',
        'SRS',
        'SQQQ',
        'SPXV',
        'SPXU',
        'SPXT',
        'SPXN',
        'SPXE',
        'SPXB',
        'SMN',
        'SMDV',
        'SMDD',
        'SKYU',
        'SKF',
        'SJB',
        'SIJ',
        'SH',
        'SEF',
        'SDS',
        'SDP',
        'SDOW',
        'SDD',
        'SCO',
        'SCC',
        'SBM',
        'SBB',
        'SAA',
        'RXL',
        'RXD',
        'RWM',
        'ROM',
        'RINF',
        'REW',
        'REK',
        'REGL',
        'RALS',
        'QLD',
        'QID',
        'PST',
        'PSQ',
        'PEX',
        'PAWZ',
        'ONLN',
        'OILK',
        'NOBL',
        'MZZ',
        'MYY',
        'MVV',
        'MRGR',
        'LTL',
        'KOLD',
        'IGHG',
        'HYHG',
        'HDG',
        'GLL',
        'FXP',
        'FUT',
        'EZJ',
        'EWV',
        'EUO',
        'EUM',
        'EUFX',
        'EUDV',
        'EQRR',
        'EPV',
        'EMTY',
        'EMSH',
        'EMDV',
        'EFZ',
        'EFU',
        'EFO',
        'EFAD',
        'EEV',
        'EET',
        'DXD',
        'DUG',
        'DOG',
        'DIG',
        'DDM',
        'DDG',
        'CSM',
        'CROC',
        'CLIX',
        'BZQ',
        'BOIL',
        'BIS',
        'BIB',
        'ANEW',
        'ALTS',
        'AGQ',
    ];
    const direxion = [
        'RWSL',
        'RWLS',
        'RWVG',
        'RWGV',
        'RWDC',
        'RWCD',
        'RWED',
        'RWDE',
        'RWUI',
        'RWIU',
        'ZMLP',
        'QMJ',
        'QQQE',
        'ESNG',
        'FLYT',
        'COM',
        'KNOW',
        'PPSC',
        'PPMC',
        'PPLC',
        'PPEM',
        'PPDM',
        'SPDN',
        'CHAD',
        'TYBS',
        'GUSH',
        'DRIP',
        'JNUG',
        'JDST',
        'NUGT',
        'DUST',
        'ERX',
        'ERY',
        'SMLL',
        'SPUU',
        'RUSL',
        'CWEB',
        'CHAU',
        'BRZU',
        'KORU',
        'MEXX',
        'JPNL',
        'INDL',
        'EDC',
        'EDZ',
        'DZK',
        'LBJ',
        'EURL',
        'YINN',
        'YANG',
        'TNA',
        'TZA',
        'SPXL',
        'SPXS',
        'MIDU',
        'TYD',
        'TYO',
        'TMF',
        'TMV',
        'DFEN',
        'UTSL',
        'TPOR',
        'TECL',
        'TECS',
        'SOXL',
        'SOXS',
        'LABU',
        'LABD',
        'HIBL',
        'HIBS',
        'UBOT',
        'RETL',
        'DPST',
        'PILL',
        'DRN',
        'DRV',
        'DUSL',
        'NAIL',
        'CURE',
        'FAS',
        'FAZ',
        'WEBL',
        'WEBS',
        'NEED',
        'LACK',
        'WANT',
        'PASS',
        'TAWK',
        'MUTE',
    ];
    const iShares = [
        'HEWW',
        'IBTK',
        'HJPX',
        'AMCA',
        'MIDF',
        'STLG',
        'EAOK',
        'EAOM',
        'STLC',
        'EMBH',
        'IEFN',
        'STMB',
        'DEFA',
        'STLV',
        'BMED',
        'STSB',
        'EAOR',
        'EWJE',
        'AGT',
        'HEWU',
        'IWFH',
        'HEWC',
        'XJR',
        'ISVL',
        'IBTA',
        'EMXF',
        'IECS',
        'IBHF',
        'EMIF',
        'IBTE',
        'UAE',
        'KWT',
        'BTEK',
        'IBTJ',
        'EAOA',
        'GOVZ',
        'IBTG',
        'IBTF',
        'IEME',
        'IEDI',
        'BFTR',
        'IAUF',
        'XJH',
        'IBHE',
        'INMU',
        'HYMU',
        'ICOL',
        'LQDI',
        'IBTH',
        'IBHD',
        'IBCE',
        'IEHS',
        'ISZE',
        'EWJV',
        'IEIH',
        'CCRV',
        'IBTD',
        'IBTI',
        'EFNL',
        'EWK',
        'IBHA',
        'FOVL',
        'DVYA',
        'ENOR',
        'EWGS',
        'IBHB',
        'IBHC',
        'IBMP',
        'IBTB',
        'ISHG',
        'IPFF',
        'IBMQ',
        'SCJ',
        'HEWG',
        'DIVB',
        'EIRL',
        'HYXU',
        'XVV',
        'EWO',
        'FILL',
        'CMDY',
        'IBDD',
        'VEGI',
        'IBDV',
        'QAT',
        'HSCZ',
        'DYNF',
        'JPXN',
        'WPS',
        'HYGH',
        'IAK',
        'IGN',
        'IBMO',
        'IETC',
        'IBDU',
        'HYXF',
        'ECNS',
        'HAWX',
        'ACWF',
        'EWZS',
        'FIBR',
        'HYBB',
        'HYDB',
        'EWUS',
        'IMTB',
        'SVAL',
        'DMXF',
        'EPHE',
        'IBMN',
        'IGEB',
        'JXI',
        'EIS',
        'ENZL',
        'EPU',
        'TOK',
        'ISCF',
        'BYLD',
        'BKF',
        'EDEN',
        'GHYG',
        'USXF',
        'IGRO',
        'IEUS',
        'BGRN',
        'HEEM',
        'IBMM',
        'EUSB',
        'IEZ',
        'IBDT',
        'IYLD',
        'ISCB',
        'EPOL',
        'TUR',
        'IFGL',
        'EWN',
        'MEAR',
        'EWM',
        'HEWJ',
        'SMMD',
        'IDNA',
        'SLVP',
        'SMIN',
        'IBMJ',
        'IEO',
        'IBML',
        'IXP',
        'TFLO',
        'CEMB',
        'EIDO',
        'EEMS',
        'EZA',
        'IHE',
        'TECB',
        'IDRV',
        'IBMK',
        'EMHY',
        'WOOD',
        'IGE',
        'EUSA',
        'THD',
        'IRBO',
        'GBF',
        'ILTB',
        'IBDS',
        'EWD',
        'ISCV',
        'EXI',
        'IYZ',
        'IAI',
        'FM',
        'SDG',
        'IMCV',
        'RXI',
        'RING',
        'IFRA',
        'EWP',
        'IHAK',
        'LEMB',
        'ERUS',
        'GNMA',
        'NYF',
        'ECH',
        'KXI',
        'EMXC',
        'REZ',
        'EWI',
        'LQDH',
        'LCTD',
        'INDY',
        'CMBS',
        'IBDR',
        'CNYA',
        'HEZU',
        'ILCV',
        'COMT',
        'IYK',
        'IGBH',
        'IAT',
        'EWS',
        'EWQ',
        'EMGF',
        'SGOV',
        'SUSB',
        'ISCG',
        'IMTM',
        'KSA',
        'IYM',
        'MXI',
        'IDU',
        'CRBN',
        'AGZ',
        'ESML',
        'DVYE',
        'SUSC',
        'AOK',
        'LDEM',
        'IMCB',
        'ILCB',
        'SMMV',
        'IVLU',
        'IWL',
        'INTF',
        'IXG',
        'SMLF',
        'SIZE',
        'EEMA',
        'LRGF',
        'IBDQ',
        'IHF',
        'TLH',
        'IWX',
        'PICK',
        'IPAC',
        'EWW',
        'EWH',
        'IGOV',
        'GSG',
        'EAGG',
        'URTH',
        'QLTA',
        'IBDP',
        'LCTU',
        'AOA',
        'EUFN',
        'IWC',
        'IBDM',
        'IXC',
        'EWL',
        'IBDO',
        'IMCG',
        'IYC',
        'IBDN',
        'REM',
        'EWA',
        'IYY',
        'IYG',
        'AOM',
        'IYJ',
        'IEV',
        'CMF',
        'AOR',
        'ILF',
        'ILCG',
        'ICVT',
        'USRT',
        'IYE',
        'IYT',
        'ICF',
        'FALN',
        'GVI',
        'IYF',
        'SLQD',
        'EPP',
        'IGLB',
        'IYH',
        'HEFA',
        'ITB',
        'IXJ',
        'EWG',
        'ITA',
        'SUSA',
        'REET',
        'DSI',
        'IGF',
        'IOO',
        'IQLT',
        'AIA',
        'IGM',
        'SUSL',
        'XT',
        'IAGG',
        'EWU',
        'IWY',
        'IEUR',
        'EEMV',
        'EWC',
        'ACWX',
        'IDV',
        'FXI',
        'SUB',
        'NEAR',
        'STIP',
        'SHYG',
        'ISTB',
        'ACWV',
        'IGV',
        'INDA',
        'ICSH',
        'ESGD',
        'IXN',
        'EZU',
        'IDEV',
        'USIG',
        'ICLN',
        'EWZ',
        'FLOT',
        'IJT',
        'IYR',
        'HDV',
        'AAXJ',
        'SOXX',
        'MCHI',
        'EWT',
        'OEF',
        'EWY',
        'ESGE',
        'IYW',
        'USHY',
        'IJK',
        'IJJ',
        'IHI',
        'IJS',
        'EFAV',
        'IUSV',
        'EFG',
        'IBB',
        'IEI',
        'IUSG',
        'IGIB',
        'IWV',
        'EWJ',
        'IWO',
        'IUSB',
        'TLT',
        'EFV',
        'IEF',
        'IWS',
        'SCZ',
        'SLV',
        'SHV',
        'MTUM',
        'VLUE',
        'IWP',
        'GOVT',
        'IWN',
        'ESGU',
        'ACWI',
        'DGRO',
        'DVY',
        'EMB',
        'PFF',
        'SHY',
        'QUAL',
        'MUB',
        'IVE',
        'HYG',
        'IGSB',
        'MBB',
        'TIP',
        'IAU',
        'IXUS',
        'USMV',
        'IWB',
        'IWR',
        'EEM',
        'IVW',
        'ITOT',
        'LQD',
        'IWD',
        'EFA',
        'IJH',
        'IWF',
        'IWM',
        'IJR',
        'IEMG',
        'AGG',
        'IEFA',
        'IVV',
    ];
    const ETNs = [
        'XVZ',
        'WIL',
        'VXZ',
        'VXX',
        'USOI',
        'USML',
        'UCIB',
        'SMHB',
        'SLVO',
        'SGG',
        'SCDL',
        'SBUG',
        'RODI',
        'RJZ',
        'RJN',
        'RJI',
        'RJA',
        'REML',
        'QULL',
        'PYPE',
        'PGM',
        'PFFL',
        'OIL',
        'NRGU',
        'NRGD',
        'NIB',
        'MVRL',
        'MTUL',
        'MLPY',
        'MLPR',
        'MLPO',
        'MLPB',
        'MJO',
        'MJJ',
        'LD',
        'JO',
        'JJU',
        'JJT',
        'JJS',
        'JJP',
        'JJN',
        'JJM',
        'JJG',
        'JJE',
        'JJC',
        'JJA',
        'IWML',
        'IWFL',
        'IWDL',
        'IMLP',
        'HDLB',
        'GSP',
        'GRU',
        'GRN',
        'GNAF',
        'GLDI',
        'GDXU',
        'GDXD',
        'GBUG',
        'GAZ',
        'FUE',
        'FRLG',
        'FNGZ',
        'FNGU',
        'FNGS',
        'FNGO',
        'FNGD',
        'FLGE',
        'FIHD',
        'FIEE',
        'FEUL',
        'FBGX',
        'EEH',
        'DZZ',
        'DJP',
        'DJCB',
        'DGZ',
        'DGP',
        'DFVS',
        'DFVL',
        'COW',
        'CEFD',
        'CAPE',
        'BNKU',
        'BNKD',
        'BDCZ',
        'BDCX',
        'BCM',
        'BAL',
        'ATMP',
        'AMUB',
        'AMTR',
        'AMND',
        'AMNA',
        'AMJ',
    ];
    const exclude = bigCaps.concat(proShares, direxion, iShares, ETNs);
    const newArr = [];

    for (let i = symbols.length - 1; i >= 0; i--) {
        if (exclude.includes(symbols[i]) || symbols[i].indexOf('$') > -1) {
        } else {
            newArr.push(symbols[i]);
        }
    }

    return newArr;
};

const encodeForm = (data) => {
    return Object.keys(data)
        .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))
        .join('&');
};

const getBiggestVolumes = (expDateMap, stockVolume, symbol, magnitude, isMyPositions) => {
    const biggestVolumes = [];
    const filter = isMyPositions ? true : stockVolume > 100000 && stockVolume < 2000000;

    if (filter) {
        for (const prop0 in expDateMap) {
            const strikeObj = expDateMap[prop0];

            for (const prop1 in strikeObj) {
                const strikeArr = strikeObj[prop1];

                for (let i = 0; i < strikeArr.length; i++) {
                    const optionVolume = strikeArr[i].totalVolume;

                    if (optionVolume && optionVolume * 100 > stockVolume * magnitude) {
                        strikeArr[i]['underlyingSymbol'] = symbol;
                        strikeArr[i]['stockVolume'] = stockVolume;

                        biggestVolumes.push(strikeArr[i]);
                    }
                }
            }
        }
    }

    return biggestVolumes;
};

const twoDecimal = (x) => Number.parseFloat(x).toFixed(2);

const getUniqueValues = (arr) => {
    const onlyUnique = (value, index, self) => {
        return self.indexOf(value) === index;
    };

    return arr.filter(onlyUnique);
};

export {
    sumOfArray,
    sortByCount,
    sortByProperty,
    findDuplicateWords,
    removeUnnecessarySymbols,
    encodeForm,
    getBiggestVolumes,
    getUniqueValues,
    twoDecimal,
};
